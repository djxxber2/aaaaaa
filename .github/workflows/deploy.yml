name: deploy

on:
  push:
    branches: [main, docs]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

jobs:
  install-deps:
    name: Install Node.js dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm install

  deploy-deno:
    name: Deploy to Deno Deploy using deployctl
    runs-on: ubuntu-latest
    needs: install-deps
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Install deployctl
        run: deno install -gArf jsr:@deno/deployctl

      - name: Deploy to Deno Deploy
        run: |
          deployctl deploy --project=testdjaberinfo src/main.ts
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}

  docs:
    name: Build and Deploy Docs
    if: github.ref == 'refs/heads/docs'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout docs branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: docs

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Build VuePress Site
        run: |
          npm install
          npm run build

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './docs/.vuepress/dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  cleanup:
    name: Remove Old Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '2 years'
